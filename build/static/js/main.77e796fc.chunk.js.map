{"version":3,"sources":["store/index.js","components/TheSidebar.jsx","components/PaletteCard.jsx","components/PaletteGroup.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchPalettes","name","palette","color","note","TheSidebar","props","state","newColor","newColorNote","selectedPaletteName","handleAddNewColor","bind","this","addNewColor","Root","type","value","onChange","e","setState","target","defaultValue","palettes","map","index","onClick","React","Component","styled","div","PaletteCard","paletteColor","paletteNote","text","Wrapper","style","CardText","p","PaletteGroup","className","PaletteGroupCardRow","App","paletteList","paletteName","paletteIndex","findIndex","push","id","Headline1","AppContainer","width","marginRight","h1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77e796fc.chunk.js","sourcesContent":["function fetchPalettes(){\r\n  return [\r\n    {\r\n      name: 'bs-gray',\r\n      palette: [\r\n        // {\r\n        //   color: \"ffffff\",\r\n        //   note: \"white\"\r\n        // },\r\n        {\r\n          color: \"f8f9fa\",\r\n          note: \"gray-100\"\r\n        },\r\n        {\r\n          color: \"e9ecef\",\r\n          note: \"gray-200\"\r\n        },\r\n        {\r\n          color: \"dee2e6\",\r\n          note: \"gray-300\"\r\n        },\r\n        {\r\n          color: \"ced4da\",\r\n          note: \"gray-400\"\r\n        },\r\n        {\r\n          color: \"adb5bd\",\r\n          note: \"gray-500\"\r\n        },\r\n        {\r\n          color: \"6c757d\",\r\n          note: \"gray-600\"\r\n        },\r\n        {\r\n          color: \"495057\",\r\n          note: \"gray-700\"\r\n        },\r\n        {\r\n          color: \"343a40\",\r\n          note: \"gray-800\"\r\n        },\r\n        {\r\n          color: \"212529\",\r\n          note: \"gray-900\"\r\n        },\r\n        {\r\n          color: \"000000\",\r\n          note: \"black\"\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      name: 'Color',\r\n      palette: [\r\n        {\r\n          color: \"007bff\",\r\n          note: \"blue\"\r\n        },\r\n        {\r\n          color: \"6610f2\",\r\n          note: \"indigo\"\r\n        },\r\n        {\r\n          color: \"6f42c1\",\r\n          note: \"purple\"\r\n        },\r\n        {\r\n          color: \"e83e8c\",\r\n          note: \"pink\"\r\n        },\r\n        {\r\n          color: \"dc3545\",\r\n          note: \"red\"\r\n        },\r\n        {\r\n          color: \"fd7e14\",\r\n          note: \"orange\"\r\n        },\r\n        {\r\n          color: \"ffc107\",\r\n          note: \"yellow\"\r\n        },\r\n        {\r\n          color: \"28a745\",\r\n          note: \"green\"\r\n        },\r\n        {\r\n          color: \"20c997\",\r\n          note: \"teal\"\r\n        },\r\n        {\r\n          color: \"17a2b8\",\r\n          note: \"cyan\"\r\n        },\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport default fetchPalettes","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default class TheSidebar extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      newColor: '252525',\r\n      newColorNote: 'Text black primary',\r\n      selectedPaletteName: null,\r\n    }\r\n\r\n    this.handleAddNewColor = this.handleAddNewColor.bind(this)\r\n  }\r\n\r\n  handleAddNewColor(){\r\n    if(this.state.selectedPaletteName){\r\n      this.props.addNewColor(\r\n        this.state.selectedPaletteName,\r\n        this.state.newColor,\r\n        this.state.newColorNote\r\n      )\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Root>\r\n        <h2>Add new color</h2>\r\n        <label>\r\n          <span>Color:</span>\r\n          <input type=\"text\" value={ this.state.newColor } onChange={ e => this.setState({newColor: e.target.value}) }/>\r\n        </label>\r\n        <label>\r\n          <span>Note:</span>\r\n          <input type=\"text\" value={ this.state.newColorNote } onChange={ e => this.setState({newColorNote: e.target.value}) } />\r\n        </label>\r\n        <label>\r\n          <span>Palette:</span>\r\n          <select onChange={ e => this.setState({selectedPaletteName: e.target.value }) } defaultValue=\"\">\r\n            <option value=\"\">Select</option>\r\n            { this.props.palettes.map((palette, index) => (\r\n              <option key={index} value={palette.name}>{ palette.name }</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <button onClick={this.handleAddNewColor}>Add color</button>\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n\r\nconst Root = styled.div`\r\n  h2 {\r\n    font-weight: 300;\r\n    padding: 0 16px;\r\n  }\r\n\r\n    label {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    span {\r\n      display: block;\r\n      padding: 16px;\r\n    }\r\n\r\n    input[type=\"text\"], select {\r\n      background: #f2f2f2;\r\n      border: 0;\r\n      border: none;\r\n      border-radius: 0;\r\n      box-sizing: border-box;\r\n      display: block;\r\n      width: 120px;\r\n      padding: 8px 16px;\r\n    }\r\n\r\n    select {\r\n      appearance: none;\r\n\r\n      option {\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n`","import styled from 'styled-components'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nexport default function PaletteCard(props){\r\n  const paletteColor = props.color\r\n  const paletteNote  = props.note\r\n\r\n  return (\r\n    <CopyToClipboard text={paletteColor}>\r\n      <Wrapper style={{ 'backgroundColor': paletteColor }}>\r\n        <CardText>Color {paletteColor}</CardText>\r\n        <CardText>Note {paletteNote}</CardText>\r\n      </Wrapper>\r\n    </CopyToClipboard>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 0 1 10%;\r\n  transition: transform .15s;\r\n  padding: 32px;\r\n  width: 10%;\r\n\r\n  &:hover {\r\n    transform: scale(.9);\r\n  }\r\n`\r\n\r\nconst CardText = styled.p`\r\n  font-size: 14px;\r\n`","import PaletteCard from './PaletteCard'\r\nimport styled from 'styled-components'\r\n\r\nexport default function PaletteGroup(props){\r\n  const palettes = props.palettes\r\n\r\n  return (\r\n    <div>\r\n      { palettes.map((palette, index) => (\r\n        <div key={ index }>\r\n          <p className=\"paletteName\">{ palette.name }</p>\r\n          <PaletteGroupCardRow>\r\n            { palette.palette.map((color, index) => {\r\n              const paletteColor = `#${color.color}`\r\n              const paletteNote  = color.note\r\n\r\n              return (\r\n                <PaletteCard color={paletteColor} note={paletteNote} key={index} />\r\n              )\r\n            })}\r\n          </PaletteGroupCardRow>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PaletteGroupCardRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`","import React from 'react'\nimport fetchPalettes from './store/index.js'\nimport TheSidebar from './components/TheSidebar.jsx'\nimport PaletteGroup from './components/PaletteGroup.jsx'\nimport styled from 'styled-components'\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      paletteList: fetchPalettes()\n    }\n\n    this.handleAddNewColor = this.handleAddNewColor.bind(this)\n  }\n\n  handleAddNewColor(paletteName, newColor, newColorNote){\n    const state = this.state\n    const paletteIndex = this.state.paletteList.findIndex(palette => palette.name === paletteName)\n\n    if(paletteIndex >= 0){\n      state.paletteList[paletteIndex].palette.push({\n        color: newColor,\n        note: newColorNote\n      })\n\n      this.setState({state})\n    }\n\n  }\n\n  render(){\n    return (\n      <div id=\"app\">\n        <Headline1>Color Palettes</Headline1>\n        <AppContainer>\n          <div style={{width: '25%'}}>\n            <TheSidebar palettes={this.state.paletteList} addNewColor={this.handleAddNewColor} />\n          </div>\n          <div style={{width: '70%',marginRight: '2.5%'}}>\n            <PaletteGroup palettes={this.state.paletteList} />\n          </div>\n        </AppContainer>\n      </div>\n    )\n  }\n}\n\nconst Headline1 = styled.h1`\n  font-weight: normal;\n`\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}